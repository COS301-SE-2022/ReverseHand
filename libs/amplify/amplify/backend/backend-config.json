{
  "storage": {
    "ReverseHand": {
      "service": "DynamoDB",
      "serviceType": "imported",
      "providerPlugin": "awscloudformation",
      "dependsOn": []
    },
    "User": {
      "service": "DynamoDB",
      "serviceType": "imported",
      "providerPlugin": "awscloudformation",
      "dependsOn": []
    },
    "S3ReverseHand": {
      "service": "S3",
      "providerPlugin": "awscloudformation",
      "dependsOn": [
        {
          "category": "auth",
          "resourceName": "reversehandc4d19aa6c4d19aa6",
          "attributes": [
            "UserPoolId"
          ]
        },
        {
          "category": "auth",
          "resourceName": "userPoolGroups",
          "attributes": [
            "customerGroupRole"
          ]
        },
        {
          "category": "auth",
          "resourceName": "userPoolGroups",
          "attributes": [
            "tradesmanGroupRole"
          ]
        },
        {
          "category": "auth",
          "resourceName": "userPoolGroups",
          "attributes": [
            "adminGroupRole"
          ]
        }
      ]
    }
  },
  "auth": {
    "reversehandc4d19aa6c4d19aa6": {
      "service": "Cognito",
      "providerPlugin": "awscloudformation",
      "dependsOn": [],
      "customAuth": false,
      "frontendAuthConfig": {
        "socialProviders": [],
        "usernameAttributes": [
          "EMAIL"
        ],
        "signupAttributes": [
          "EMAIL"
        ],
        "passwordProtectionSettings": {
          "passwordPolicyMinLength": 8,
          "passwordPolicyCharacters": []
        },
        "mfaConfiguration": "OPTIONAL",
        "mfaTypes": [
          "TOTP"
        ],
        "verificationMechanisms": [
          "EMAIL"
        ]
      }
    },
    "userPoolGroups": {
      "service": "Cognito-UserPool-Groups",
      "providerPlugin": "awscloudformation",
      "dependsOn": [
        {
          "category": "auth",
          "resourceName": "reversehandc4d19aa6c4d19aa6",
          "attributes": [
            "UserPoolId",
            "AppClientIDWeb",
            "AppClientID",
            "IdentityPoolId"
          ]
        }
      ]
    }
  },
  "api": {
    "reversehandapi": {
      "service": "AppSync",
      "providerPlugin": "awscloudformation",
      "dependsOn": [
        {
          "category": "auth",
          "resourceName": "reversehandc4d19aa6c4d19aa6",
          "attributes": [
            "UserPoolId"
          ]
        }
      ],
      "output": {
        "authConfig": {
          "defaultAuthentication": {
            "authenticationType": "AMAZON_COGNITO_USER_POOLS",
            "userPoolConfig": {
              "userPoolId": "authreversehandc4d19aa6c4d19aa6"
            }
          },
          "additionalAuthenticationProviders": []
        }
      }
    }
  },
  "function": {
    "acceptBidResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "closeAdvertResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "createAdvertResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "placeBidResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "shortListBidResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "viewAdvertsResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "viewBidsResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "viewJobsResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "addUserToGroupResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "editAdvertResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "createUserResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "deleteAdvertResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "viewUserResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "deleteBidResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "getGoogleApiKeyResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "editBidResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "editUserDetailResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "addReviewResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "removeDomainResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "createChatResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "sendMessageResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "getConsumerMessagesResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "getTradesmanMessagesResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "deleteChatResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "getNotificationsResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "deleteReviewResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    },
    "getUserStatisticsResolver": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    }
  }
}